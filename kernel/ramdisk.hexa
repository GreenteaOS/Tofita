// The Tofita Kernel
// Copyright (C) 2022 Oleg Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

@struct
class RamDiskInfo {
	var ramDiskChecksum: UInt32
	var ramDiskSize: UInt32
	var assetsCount: UInt32
}

@struct
	var path[128]: UInt16
class RamDiskAssetInfo {
	var size: UInt32
	var offsetFromRamDiskFirstByte: UInt32
}

static const RamDisk *_ramdisk
fun setRamDisk(const ramdisk: Pointer<RamDisk>) {
	_ramdisk = ramdisk
}

@struct
class RamDiskAsset {
	var size: UInt32
	var data: Pointer<UInt8>
}

const RamDiskAsset getRamDiskAsset(pathToAsset: ConstWideCharPointer) {
	var asset: RamDiskAsset
	asset.size = 0
	asset.data = 0
	const UInt16 *path = (const UInt16 *)pathToAsset

	const RamDiskInfo *ramDiskInfo = (const RamDiskInfo *)_ramdisk.base

	for (UInt32 id = 0; id < ramDiskInfo.assetsCount; id++) {
		// Pointer arithmetic like a boss
		let ramDiskAssetInfoPtr =
			(_ramdisk.base as! UInt64) + sizeof(RamDiskInfo) + sizeof(RamDiskAssetInfo) * id
		const RamDiskAssetInfo *ramDiskAssetInfo = (const RamDiskAssetInfo *)ramDiskAssetInfoPtr
		var found: UInt8 = 1

		for (UInt8 at = 0; at < 127; at++) {
			if ramDiskAssetInfo.path[at] != path[at] {
				found = 0
				break
			}

			if ramDiskAssetInfo.path[at] == 0 {
				break
			}
		}

		if found {
			asset.size = ramDiskAssetInfo.size
			asset.data = (UInt8 *)((_ramdisk.base as! UInt64) + ramDiskAssetInfo.offsetFromRamDiskFirstByte)
			return asset
		}
	}

	serialPrintf("[ramdisk.getRamDiskAsset] asset '%S' not found in %d assets\n", path,
				 ramDiskInfo.assetsCount)
	return asset
}
