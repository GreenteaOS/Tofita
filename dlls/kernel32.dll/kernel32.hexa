// The Tofita Kernel
// Copyright (C) 2022-2023 Oleh Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

@dllExport('ExitProcess')
@haltsProgram
fun exitProcess(@hide exitCode UInt32) {
	tofitaExitProcess(exitCode)
	// TODO jump to NtDLL or something
	while true {}
}

@dllExport('LocalAlloc')
fun localAlloc(flags UInt32, bytes SizeOfPointer) HLocal {
	// TODO better way to take pointer to array element `&buffer[bufferOffset]`
	var result = (buffer as! UInt64) + bufferOffset
	bufferOffset += bytes as! UInt64 // TODO .toInt()
	// Align to 8 bytes
	// Because handle has some bits reserved for tags
	// TODO how many bits exactly?
	// TODO also pre-align at CRT startup, cause section may be misaligned
	// TODO 16-bytes align
	// TODO OOM
	while bufferOffset % 8 != 0 {
		bufferOffset++
		// TODO non-loop align
	}
	return result as! HLocal
}

@dllExport('GlobalAlloc')
fun globalAlloc(flags UInt32, bytes SizeOfPointer) HGlobal {
	return localAlloc(0, bytes) as! HGlobal
	// TODO corresponding *Free* functions should check for != null,
	// do MemProbe and check the tag of heap block to actually be a heap
	// and only then do rc--
}

@dllExport('HeapAlloc')
fun heapAlloc(heap Handle, flags UInt32, bytes SizeOfPointer) ArrayPointer<UInt8> {
	return localAlloc(0, bytes) as! ArrayPointer<UInt8>
}

@dllExport('free')
fun free(@hide pointer SizeOfPointer) Void {
	// TODO
	// Note: pointer may be null
}

// TODO @linkName('_DllMainCRTStartup')
@fastcall fun _DllMainCRTStartup() Void {}
