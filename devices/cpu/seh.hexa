// The Tofita Kernel
// Copyright (C) 2022 Oleg Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// SEH exceptions

// Tests in disasm show that this is not optimized out thanks to volatile

// TODO probeCopy to local stack instead of probe.read, good for SMP

@volatile Bool @noInline
_probeForReadOkay(@volatile at: UInt64, @volatile const UInt64 bytes) {
	sehProbe = true
	// TODO do not probe upper half to not touch mmio from user process while probing
	// TODO per-page not per-byte
	@volatile const UInt8 *ptr = (@volatile const UInt8 *)at
	for i in bytes {
		at += ptr[i]
	}
	sehProbe = false
	return true
}

@volatile Bool (*@volatile const probeForReadOkay)(@volatile at: UInt64,
												 @volatile bytes: UInt64) = _probeForReadOkay

@volatile Bool @noInline
_probeForWriteOkay(@volatile const UInt64 at, @volatile const UInt64 bytes) {
	sehProbe = true
	// TODO per-page not per-byte
	@volatile UInt8 *ptr = (@volatile UInt8 *)at
	// TODO i also as volatile?
	for i in bytes {
		ptr[i] = ptr[i]
	}
	sehProbe = false
	return true
}

@volatile Bool (*@volatile const probeForWriteOkay)(@volatile at: UInt64,
												  @volatile bytes: UInt64) = _probeForWriteOkay
