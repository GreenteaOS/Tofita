// The Tofita Kernel
// Copyright (C) 2020  Oleg Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

#define PACKED __attribute__((gcc_struct, packed))

namespace pages {
@struct
class {
	// Is the page present in physical memory?
	UInt8 present : 1

	// Pages are read-only by default
	UInt8 writeAllowed : 1

	// Pages are only accessible by supervisor by default
	UInt8 accessibleByAll : 1

	// Write through abilities of the page
	UInt8 writeThrough : 1

	// If set, the page will not be cached
	UInt8 cacheDisabled : 1

	// Was the page accessed?
	UInt8 accessed : 1

	// Has the page been written to? Only applicable for PTE.
	UInt8 dirty : 1

	// Page size by default is small, enabling this bit makes it bigger. Only applicable for PTE
	UInt8 largePage : 1

	// Prevent the translations cache from updating
	// the address in cache if CR3 is reset.
	//
	// Page global enable bit in CR4 has to be set to
	// enable this feature.
	//
	// Only applicable for PTE
	UInt8 global : 1

	// Not used by the processor
	UInt8 metadata : 3

	// Physical address of the child table/page
	UInt64 address : 40

	// Not used by the processor
	UInt8 metadata2 : 7

	// Only applicable for PTE
	UInt8 protectionKey : 4

	// Disable execution of code from this page
	UInt8 disableExecution : 1
} PACKED PageEntry

_Static_assert(sizeof(PageEntry) == sizeof(uint64_t), "page entry has to be 64 bits")
} // namespace pages
