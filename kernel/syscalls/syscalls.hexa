// The Tofita Kernel
// Copyright (C) 2022 Oleg Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// TODO randomize on every build (use version number)
// @randomize(min: 2, max: 123456)
let userSyscalls = 123000

// TODO store all syscalls as huge complex enum and generate all wrappers with macro
// and serializer to-from enum tags / wow64
//@castTo('TofitaSyscalls')
enum TofitaSyscalls : UInt32 {
	// System
	Noop = 0
	Cpu = 1

	// User
	// TODO DebugLog = userSyscalls
	DebugLog = 123000
	CreateWindowEx = 123001 // TODO auto compute
	ShowWindow = 123002 // TODO auto compute
	GetMessage = 123003 // TODO auto compute
	PostMessage = 123004 // TODO auto compute
	GetOrCreateWindowFramebuffer = 123005 // TODO auto compute
	SwapWindowFramebuffer = 123006 // TODO auto compute
	ExitProcess = 123007 // TODO auto compute
}

@struct @sizeOf(8 * 3)
class DebugLogPayload {
	var message: ConstArrayPointer<UInt16>
	// TODO count chars at userspace, and transfer as length for SEH probing
	var extra: UInt64 = 0
	var more: UInt64 = 0
	new () {}
}

@struct @sizeOf(8 * 2)
class SwapWindowFramebufferPayload {
	var windowId: UInt64
	var fb: WindowFramebuffer
	new () {}
}

@struct @sizeOf(8 * 2)
class ShowWindowPayload {
	var nCmdShow: CmdShow
	var windowId: UInt64
	new () {}
}

@struct
class LParam {
	new () {}
}

@struct
class WParam {
	new () {}
}

// TODO use pointer wrappers instead of raw pointers
@struct @sizeOf(8 * 8 + 5 * 4 + 4)
class CreateWindowExPayload {
	var wc: WindowClass
	var hWnd: HWnd

	// CreateWindowEx
	var lpClassName: ConstArrayPointer<ClangWideChar>
	// TODO count chars at userspace, and transfer as length for SEH probing
	var lpWindowName: ConstArrayPointer<ClangWideChar>
	var dwStyle: UInt32
	var x: Int32
	var y: Int32
	var nWidth: Int32
	var nHeight: Int32
	var hWndParent: HWnd
	var hMenu: HMenu
	var hInstance: HInstance
	var lpParam: LParam
	new () {}
}

@struct @sizeOf(8 + 4 + 8 * 2 + 4)
class PostMessagePayload {
	var hWnd: HWnd
	var msg: Message
	var wParam: WParam
	var lParam: LParam
	new () {}
}

@struct @sizeOf(8 * 2 + 4 * 2)
class GetMessagePayload {
	var msg: Msg
	var hWnd: HWnd
	var wMsgFilterMin: UInt32
	var wMsgFilterMax: UInt32
	new () {}
}
