// The Tofita Kernel
// Copyright (C) 2020  Oleg Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// AMD64 assembly instructions wrapper


inline fun cpuid(leaf: UInt32, subleaf: UInt32, eax: Pointer<UInt32>, ebx: Pointer<UInt32>, ecx: Pointer<UInt32>,
					  edx: Pointer<UInt32>) {
	UInt32 a, b, c, d
	asm volatile("cpuid" : "=a"(a), "=b"(b), "=c"(c), "=d"(d) : "a"(leaf), "c"(subleaf))
	*eax = a
	*ebx = b
	*ecx = c
	*edx = d
}

// Note: this also a way to clear TLB cache even if cr3 not switched to another
fun writeCr3(value: UInt64)
// TODO asm("invd")
fun halt()
fun enableAllInterrupts()
// Except non-mascable
fun disableAllInterrupts()
fun enableAllInterruptsAndHalt()
fun pause()
fun yield()
