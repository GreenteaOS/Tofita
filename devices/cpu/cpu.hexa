// The Tofita Kernel
// Copyright (C) 2022 Oleg Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Bindings to the .asm
// TODO `@emitHeader@linkAsIs` undesired parsing? also test `@x/*y*/@z`
// TODO `@linkAsIs` should assume `@emitHeader`?
@emitHeader @linkAsIs /*@rename('enterKernelMode')*/ declare fun enterKernelMode(): Void
@emitHeader @linkAsIs /*@rename('selectSegment')*/ declare fun selectSegment(): Void
@emitHeader @linkAsIs /*@rename('enterUserMode')*/ declare fun enterUserMode(): Void
@emitHeader @linkAsIs /*@rename('timerInterrupt')*/ declare fun timerInterrupt(): Void
@emitHeader @linkAsIs /*@rename('syscallInterrupt')*/ declare fun syscallInterrupt(): Void
@emitHeader @linkAsIs /*@rename('yieldInterrupt')*/ declare fun yieldInterrupt(): Void
@emitHeader @linkAsIs @volatile /*@rename('getCr2')*/ declare fun getCr2(): UInt64
@emitHeader @linkAsIs @volatile /*@rename('sehReturnFalse')*/ declare fun sehReturnFalse(): Bool

@emitHeader @linkName('cpu0x00')
declare fun cpu0x00(): Void

@emitHeader @linkAsIs declare fun cpu0x01(): Void
@emitHeader @linkAsIs declare fun cpu0x02(): Void
@emitHeader @linkAsIs declare fun cpu0x03(): Void
@emitHeader @linkAsIs declare fun cpu0x04(): Void
@emitHeader @linkAsIs declare fun cpu0x05(): Void
@emitHeader @linkAsIs declare fun cpu0x06(): Void
@emitHeader @linkAsIs declare fun cpu0x07(): Void
@emitHeader @linkAsIs declare fun cpu0x08(): Void
@emitHeader @linkAsIs declare fun cpu0x09(): Void
@emitHeader @linkAsIs declare fun cpu0x0A(): Void
@emitHeader @linkAsIs declare fun cpu0x0B(): Void
@emitHeader @linkAsIs declare fun cpu0x0C(): Void
@emitHeader @linkAsIs declare fun cpu0x0D(): Void
@emitHeader @linkAsIs declare fun cpu0x0E(): Void
@emitHeader @linkAsIs declare fun cpu0x0F(): Void
@emitHeader @linkAsIs declare fun cpu0x10(): Void
@emitHeader @linkAsIs declare fun cpu0x11(): Void
@emitHeader @linkAsIs declare fun cpu0x12(): Void
@emitHeader @linkAsIs declare fun cpu0x13(): Void
@emitHeader @linkAsIs declare fun cpu0x14(): Void
@emitHeader @linkAsIs declare fun cpu0x15(): Void
