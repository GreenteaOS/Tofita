// The Tofita Kernel
// Copyright (C) 2022-2023 Oleh Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Desktop window manager (i.e. GUI logic)

// Zero for system GUI (like taskbar)
var firstResponder UInt64 = 0 // Active window to catch keyboard input

// TODO
//enum WindowSizingState : UInt8 {
//	Normal = 0
//	Minimized = 1
//  /// By that button at the right borrom corner
//	MinimizedByDesktopPeeker = 1
//	Minimized = 1
//}

let windowsLimit UInt64 = 256

// TODO allocate dynamically (just use Hexa Array or something)
let windowsList [OverlappedWindow] = []

var rootWindow UInt64 = 0
var topmostWindow UInt64 = 0

var mouseDragCapturedWindow Bool = false
var mouseDragWindow UInt64 = 0
var mouseDragLastX Int16 = 0
var mouseDragLastY Int16 = 0

// Something happened
var mouseActivity Bool = false
var keyboardActivity Bool = false

// Note: those are controlled by DWM
@volatile var mouseX Int16 = 256i16
@volatile var mouseY Int16 = 256i16

enum FrameHover : UInt8 {
	Noop = 0
	Min
	Max
	Close
}

var frameHoverWindow UInt64 = 0
var frameHoverWindowDown Bool = false
var frameHoverWindowInsideButtonArea Bool = false
var frameHoverState FrameHover = FrameHover.Noop
var clickStartTimestamp UInt64 = 0
var isDoubleClick Bool = false
var clickStartX Int16 = 0i16
var clickStartY Int16 = 0i16
