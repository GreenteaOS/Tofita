// The Tofita Kernel
// Copyright (C) 2020  Oleg Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

#pragma once

let USER_SYSCALLS = 123000

// WideChar is UTF-16LE with -fshort-wchar
_Static_assert(sizeof(wchar_t) == 2, "bad sizeof")

enum TofitaSyscalls : UInt64 {
	// System
	Noop = 0,
	Cpu = 1,

	// User
	DebugLog = USER_SYSCALLS,
	CreateWindowEx,
	ShowWindow,
	GetMessage,
	PostMessage,
	GetOrCreateWindowFramebuffer,
	SwapWindowFramebuffer,
	ExitProcess
}

@struct
class DebugLogPayload {
	const WideChar *message
	// TODO count chars at userspace, and transfer as length for SEH probing
	var extra: UInt64 = 0
	var more: UInt64 = 0
}

_Static_assert(sizeof(DebugLogPayload) == 8 * 3, "bad sizeof")

@struct
class SwapWindowFramebufferPayload {
	UInt64 windowId
	nj.WindowFramebuffer *fb
}

_Static_assert(sizeof(SwapWindowFramebufferPayload) == 8 * 2, "bad sizeof")

@struct
class ShowWindowPayload {
	Int32 nCmdShow
	UInt64 windowId
}

_Static_assert(sizeof(ShowWindowPayload) == 8 * 2, "bad sizeof")

// TODO use pointer wrappers instead of raw pointers
@struct
class CreateWindowExPayload {
	const wapi.WindowClass *wc
	wapi.HWnd hWnd

	// CreateWindowEx
	const WideChar *lpClassName
	// TODO count chars at userspace, and transfer as length for SEH probing
	const WideChar *lpWindowName
	UInt32 dwStyle
	Int32 x
	Int32 y
	Int32 nWidth
	Int32 nHeight
	wapi.HWnd hWndParent
	wapi.HMenu hMenu
	wapi.HInstance hInstance
	Void *lpParam
}

_Static_assert(sizeof(CreateWindowExPayload) == 8 * 8 + 5 * 4 + 4, "bad sizeof")

@struct
class PostMessagePayload {
	wapi.HWnd hWnd
	wapi.Message msg
	Void *wParam
	Void *lParam
}

_Static_assert(sizeof(PostMessagePayload) == 8 + 4 + 8 * 2 + 4, "bad sizeof")

@struct
class GetMessagePayload {
	wapi.Msg *msg
	wapi.HWnd hWnd
	UInt32 wMsgFilterMin
	UInt32 wMsgFilterMax
}

_Static_assert(sizeof(GetMessagePayload) == 8 * 2 + 4 * 2, "bad sizeof")
