// The Tofita Kernel
// Copyright (C) 2022-2023 Oleh Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Desktop (i.e. icons)
class Desktop {
	var trashCanHover Bool = false

	new () {}

	fun handleEvent(id UInt64, event ColliderEventType) {
		if id == 1 {
			trashCanHover = true
		}
	}
}

var dragX = 255i16
var dragY = 255i16
// TODO Hexa: obvious typing fail `var drag = false` at `fun mouseMove`
var drag Bool = false

fun compositeDesktopSelectionRectangle(mouseX Int16, mouseY Int16) {
	var color = new ByValue<Pixel32>()
	color.ref.rgba.ref.r = color.ref.rgba.ref.g = color.ref.rgba.ref.b = 0xFFu8
	color.ref.rgba.ref.a = 64

	// Keep origin left-top
	var outlineX = mouseX < dragX ? mouseX : dragX
	var outlineY = mouseY < dragY ? mouseY : dragY
	var outlineW = mouseX < dragX ? dragX - mouseX : mouseX - dragX
	var outlineH = mouseY < dragY ? dragY - mouseY : mouseY - dragY

	if drag {
		drawRectangleWithAlpha(color.ref, outlineX, outlineY, outlineW as! UInt16, outlineH as! UInt16)
		drawRectangleOutline(color, outlineX, outlineY, outlineW as! UInt16, outlineH as! UInt16)
	}
}

fun compositeDesktop(mouseX Int16, mouseY Int16) {
	compositeDesktopSelectionRectangle(mouseX, mouseY)
}

fun handleMouseDownDesktop(type MouseActionType, mouseX Int16, mouseY Int16) {
	if drag == false {
		dragX = mouseX
		dragY = mouseY
	}
	drag = true

	haveToRender = haveToRender or drag
}

fun handleMouseUpDesktop(type MouseActionType, mouseX Int16, mouseY Int16) {
	haveToRender = haveToRender or drag
	drag = false
}

fun handleMouseMoveDesktop(mouseX Int16, mouseY Int16) {
	haveToRender = haveToRender or drag
}
