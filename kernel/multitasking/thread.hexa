// The Tofita Kernel
// Copyright (C) 2023 Oleh Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

/// Basic multitasking concept
class TofitaThread {
	/// Owner of the thread
	var pid UInt64

	/// Is it allowed to make this thread current
	var schedulable Bool
	// TODO combine booleans into bit/flag mask?

	/// Should be false after creation
	var scheduleOnNextTick Bool

	/// CR3, should be page aligned
	var pml4 ArrayPointer<ByValue<PageEntry>>

	/// State
	var frame InterruptFrame

	/// Filled on #PF
	var cr2PageFaultAddress UInt64

	/// When syscall happens, thread halted and handled retroactively
	/// in the kernel's event loop
	var syscallToHandle TofitaSyscalls // = Noop if no actions required

	new (owner UInt64) {
		pid = owner
	}
}
